import React, { useState } from 'react';
import { Link } from 'react-router-dom';

interface Meditation {
    id: string;
    title: string;
    shortDescription: string;
    fullDescription: string;
    thumbnailUrl: string;
    youtubeUrl: string;
    accessType: 'free' | 'subscription';
}

const Meditations: React.FC = () => {
    const [showModal, setShowModal] = useState(false);
    const [meditations] = useState<Meditation[]>([
        {
            id: '1',
            title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è –ù–æ–≤–æ–π –≠—Ä—ã',
            shortDescription: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è ‚Äì —ç—Ç–æ –Ω–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –º–æ–ª–∏—Ç–≤—ã, –∫–æ–≥–¥–∞ –º—ã —Å–æ–∑–∏–¥–∞–µ–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ø-–õ–∏—á–Ω–æ—Å—Ç—å-–î—É—à–∞',
            fullDescription: `–ì–ª–∞–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞ ‚Äî –≤ –≤—ã–±–æ—Ä–µ –º–µ–∂–¥—É –ø—É—Ç—ë–º –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å—é –î—É—à–∏. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–µ–¥–µ—Ç—Å—è –Ω–∞ —Å–æ–±–ª–∞–∑–Ω, –∫–æ–≥–¥–∞ —Å–æ—Ü–∏—É–º –∑–∞–º–∞–Ω–∏–≤–∞–µ—Ç —Ä–µ–∫–ª–∞–º–æ–π, –±–ª–æ–≥–µ—Ä–∞–º–∏, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–±—Ä—è–∫—É—à–∫–∞–º–∏, –∏, —á–µ–ª–æ–≤–µ–∫, –∑–∞–ø—É—Ç–∞–≤—à–∏—Å—å, –≤—ã–±–∏—Ä–∞–µ—Ç –ü—É—Ç—å. –ê –æ–Ω –Ω–µ–∏–∑–±–µ–∂–Ω–æ –≤–µ–¥–µ—Ç –≤ –ª–æ–≤—É—à–∫—É —Å–æ—Ü–∏—É–º–Ω—ã—Ö –∫–∞—Ä—É—Å–µ–ª–µ–π. –ù–æ –ø–∞—Ä–∞–¥–æ–∫—Å –≤ —Ç–æ–º, —á—Ç–æ –Ω–∞—á–∞—Ç—å –∂–∏—Ç—å –≤ –ø–æ—Ç–æ–∫–µ, –Ω–∞ –Ω—É–∂–Ω–æ–π –í–∞–º —Å–∫–æ—Ä–æ—Å—Ç–∏, –∂–∏—Ç—å –≤ –∫–∞–π—Ñ, –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ, —Ç.–µ. –≤—ã—Å–∫–æ—á–∏–≤ –∏–∑ –∑–∞–º–∫–Ω—É—Ç–æ–≥–æ –∫—Ä—É–≥–∞. –ú—ã –ø–æ–ø–∞–¥–∞–µ–º –≤ –ø–æ—Ç–æ–∫ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∂–∏—Ç—å –≤ –∫–∞–π—Ñ. 
–í –ø–æ—Ç–æ–∫–æ–≤–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —É –í–∞—Å –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∏—Å—Ç–µ–º—ã. –ü–æ—Ç–æ–º—É —á—Ç–æ –≤ –î—É—à–µ, –í—ã –¥–≤–∏–≥–∞–µ—Ç–µ—Å—å –¥–∞–ª—å—à–µ –∏ —á–µ—Ä–µ–∑ –ø–æ—Ç–æ–∫ –≤—Ö–æ–¥–∏—Ç–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–æ–∑–Ω–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–≤–Ω—É—Ç—Ä—å. –ò –í–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è, –í–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–∫ –≤—Å—è —ç–Ω–µ—Ä–≥–∏—è —ç–≤–æ–ª—é—Ü–∏–∏, –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–¥—Ç–∏ –≤–æ–≤–Ω—É—Ç—Ä—å. –≠—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ¬´–Ø-–õ–∏—á–Ω–æ—Å—Ç—å-–î—É—à–∞¬ª. –†–∞—Å–ø–æ–ª–∞–≥–∞–π—Ç–µ—Å—å —É–¥–æ–±–Ω–æ –∏ –ø—Ä–æ–¥–µ–ª–∞–π—Ç–µ —ç—Ç—É –º–µ–¥–∏—Ç–∞—Ü–∏—é:`,
            thumbnailUrl: '/images/meditation-thumbnails/meditation1.png',
            youtubeUrl: 'https://www.youtube.com/embed/pBDvKvDskXM',
            accessType: 'free'
        },
        {
            id: '2',
            title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –º—ã—Å–ª–µ–π',
            shortDescription: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–≤–ª–∞–¥–µ—Ç—å –Ω–∞–≤—ã–∫–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –º—ã—Å–ª–µ–π',
            fullDescription: `–£ 98% –ª—é–¥–µ–π –º—ã—Å–ª–∏ –Ω–µ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –º—ã—Å–ª—è—Ç –Ω–∞ ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª –º—ã—Å–ª—è—Ö (–±–æ–ª—Ç–∞–ª–∫–∞ –≤ –≥–æ–ª–æ–≤–µ). –≠—Ñ–∏–º–µ—Ä–æ–∏–¥ ‚Äì –∫–æ—Ä–æ—Ç–∫–æ–∂–∏–≤—É—â–∏–π —ç–≥—Ä–µ–≥–æ—Ä (–æ–¥–∏–Ω —Å–µ–∑–æ–Ω). ¬´–ú–µ–¥–ª–µ–Ω–Ω–∞—è¬ª –º—ã—Å–ª—å –∫–∞–∫ –±—ã –∏–¥–µ—Ç —Ñ–æ–Ω–æ–º, –≤—ã –¥–µ–ª–∞–µ—Ç–µ –¥–µ–ª–∞, –∞ —Ñ–æ–Ω–æ–º –∏–¥–µ—Ç –º—ã—Å–ª—å ¬´–ø–æ–∑–≤–æ–Ω–∏ –º–∞–º–µ¬ª; –æ–Ω–∏ –¥–∞–∂–µ –≤–æ —Å–Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –í—ã —Å–ª—É—à–∞–µ—Ç–µ –ª–µ–∫—Ü–∏—é, –∞ –∏–Ω—Å–∞–π—Ç—ã –∏–¥—É—Ç –Ω–∞ ¬´–º–µ–¥–ª–µ–Ω–Ω—ã—Ö¬ª –º—ã—Å–ª—è—Ö.
–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –±—ã—Å—Ç—Ä—ã–º–∏ –∏ –º–µ–¥–ª–µ–Ω–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏ ‚Äì –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —Ä—É—Å–ª–æ –ø–æ–¥–∑–µ–º–Ω–æ–π —Ä–µ–∫–∏ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞. –ë–æ–ª—å—à—É—é —Ü–µ–ª—å –ª—é–¥–∏ –ø–æ—Ç–æ–∫–∞ –º—ã—Å–ª—è—Ç –Ω–∞ ¬´–º–µ–¥–ª–µ–Ω–Ω—ã—Ö¬ª –º—ã—Å–ª—è—Ö, –≤—Å–µ —á—Ç–æ –Ω–µ –¥–ª—è —Å–µ–±—è ‚Äì –Ω–∞ ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª. –ê –≤ —Å–æ—Ü–∏—É–º–µ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤–µ—â–∏ –º—ã—Å–ª—è—Ç –Ω–∞ ¬´–º–µ–¥–ª–µ–Ω–Ω—ã—Ö¬ª –º—ã—Å–ª—è—Ö, –∞ —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è –Ω–∞ ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª –º—ã—Å–ª—è—Ö.
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–æ–º –≤ –Ω–æ–≤–æ–º –≤–∏–¥–µ–æ –ù—É—Ä–ª–∞–Ω–∞ –ú—É—Ä–∞—Ç–∫–∞–ª–∏:`,
            thumbnailUrl: '/images/meditation-thumbnails/meditation2.png',
            youtubeUrl: 'https://www.youtube.com/embed/cg6lg0lAbyE',
            accessType: 'free',
        },
        {
            id: '3',
            title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è ¬´–ò–¥–µ–∞–ª—å–Ω—ã–µ —Ä–æ–¥—ã¬ª',
            shortDescription: '–≠—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Å–≤–æ–µ–º —Å–æ–∑–Ω–∞–Ω–∏–∏, –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–∏ –∏ —ç–Ω–µ—Ä–≥–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ',
            fullDescription: '–≠—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Å–≤–æ–µ–º —Å–æ–∑–Ω–∞–Ω–∏–∏, –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–∏ –∏ —ç–Ω–µ—Ä–≥–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ',
            thumbnailUrl: '/images/meditation-thumbnails/meditation3.png',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'subscription',
        }
    ]);

    const handleMeditationClick = (meditation: Meditation) => {
        if (meditation.accessType === 'free') {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∏–¥–µ–æ
            window.location.href = `/meditation/${meditation.id}`;
        } else if (meditation.accessType === 'subscription') {
            setShowModal(true);
        }
    };

    const getAccessIcon = (accessType: string) => {
        switch (accessType) {
            case 'free':
                return null;
            case 'subscription':
                return 'üîí';
            default:
                return null;
        }
    };

    const getAccessColor = (accessType: string) => {
        switch (accessType) {
            case 'free':
                return 'bg-green-500 hover:bg-green-600';
            case 'subscription':
                return 'bg-purple-500 hover:bg-purple-600';
            default:
                return 'bg-gray-500 hover:bg-gray-600';
        }
    };

    return (
        <div className="min-h-screen relative">
            {/* Header with Back Button */}
            <div className="flex items-center justify-between bg-gray-100 p-4 mb-2">
                <Link to="/" className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                    <img src="/icons/arrowBack.png" alt="arrowBack" className="w-5 h-5" />
                </Link>
                <h1 className="text-2xl font-bold">–ú–µ–¥–∏—Ç–∞—Ü–∏–∏</h1>
                <div>
                    <img src="/icons/logo.png" alt="logo" className="w-8 h-8" />
                </div>
            </div>

            {/* Video Lessons Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4">
                {meditations.map((meditation) => (
                    <div key={meditation.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                        {/* Thumbnail */}
                        <div className="relative">
                            <img 
                                src={meditation.thumbnailUrl} 
                                alt={meditation.title}
                                className="w-full h-48 object-cover bg-gray-200"
                                onError={(e) => {
                                    const target = e.target as HTMLImageElement;
                                    target.style.display = 'none';
                                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º
                                    const placeholder = document.createElement('div');
                                    placeholder.className = 'w-full h-48 bg-blue-600 flex items-center justify-center text-white text-center p-4';
                                    placeholder.innerHTML = `<div><div class="text-2xl mb-2">üìπ</div><div class="text-sm">${meditation.title}</div></div>`;
                                    target.parentNode?.appendChild(placeholder);
                                }}
                            />
                            {/* <div className="absolute top-2 right-2 bg-black bg-opacity-75 text-white px-2 py-1 rounded text-sm">
                                {meditation.duration}
                            </div> */}
                        </div>

                        {/* Content */}
                        <div className="p-4">
                            <h3 className="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
                                {meditation.title}
                            </h3>
                            <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                                {meditation.shortDescription}
                            </p>

                            {/* Action Button */}
                            <button
                                onClick={() => handleMeditationClick(meditation)}
                                className={`w-full py-2 px-4 rounded-lg text-white font-medium transition-colors flex items-center justify-center ${
                                    meditation.accessType === 'free' 
                                        ? getAccessColor(meditation.accessType)
                                        : 'bg-gray-400 hover:bg-gray-500'
                                }`}
                            >
                                {meditation.accessType === 'free' ? (
                                    <>
                                        <span>–ü–µ—Ä–µ–π—Ç–∏</span>
                                        <span className="ml-2">‚ñ∂</span>
                                    </>
                                ) : (
                                    <>
                                        <span className="mr-2">{getAccessIcon(meditation.accessType)}</span>
                                        <span>–ó–∞–∫—Ä—ã—Ç–æ</span>
                                    </>
                                )}
                            </button>
                        </div>
                    </div>
                ))}
            </div>

            {/* Modal */}
            {showModal && (
                <div className="fixed inset-0 flex items-center justify-center z-10 p-4" style={{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }}>

                    <div className="bg-white rounded-lg p-6 max-w-md w-full">
                        <div className="text-center">
                            <div className="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <span className="text-2xl">üîí</span>
                            </div>
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">
                                –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
                            </h3>
                            <p className="text-gray-600 mb-6">
                                –ù—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞
                            </p>
                            <button
                                onClick={() => setShowModal(false)}
                                className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
                            >
                                –ü–æ–Ω—è—Ç–Ω–æ
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Meditations; 