import React, { useState } from 'react';
import { Link } from 'react-router-dom';

interface VideoLesson {
    id: string;
    title: string;
    shortDescription: string;
    fullDescription: string;
    thumbnailUrl: string;
    youtubeUrl: string;
    accessType: 'free' | 'paid' | 'subscription';
    duration: string;
}

const Meditations: React.FC = () => {
    const [showModal, setShowModal] = useState(false);
    const [modalMessage, setModalMessage] = useState('');
    const [videoLessons] = useState<VideoLesson[]>([
        {
            id: '1',
            title: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ —ç–Ω–µ—Ä–≥–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
            shortDescription: '–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã —Å —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π',
            fullDescription: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∏—Ä —ç–Ω–µ—Ä–≥–æ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π. –ò–∑—É—á–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã —Å —ç–Ω–µ—Ä–≥–∏–µ–π, –Ω–∞—É—á–∏—Ç–µ—Å—å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Ç–æ–∫–∏.',
            thumbnailUrl: '/images/meditation-thumbnails/intro.jpg',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'free',
            duration: '15:30'
        },
        {
            id: '2',
            title: '–¢–µ—Ö–Ω–∏–∫–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –¥—ã—Ö–∞–Ω–∏—è',
            shortDescription: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏',
            fullDescription: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –¥—ã—Ö–∞–Ω–∏—è. –ù–∞—É—á–∏—Ç–µ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥—ã—à–∞—Ç—å –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è.',
            thumbnailUrl: '/images/meditation-thumbnails/breathing.jpg',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'free',
            duration: '22:15'
        },
        {
            id: '3',
            title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
            shortDescription: '–ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏',
            fullDescription: '–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é –∂–∏–∑–Ω—å.',
            thumbnailUrl: '/images/meditation-thumbnails/meditation.jpg',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'free',
            duration: '18:45'
        },
        {
            id: '4',
            title: '–†–∞–±–æ—Ç–∞ —Å —á–∞–∫—Ä–∞–º–∏',
            shortDescription: '–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤',
            fullDescription: '–ì–ª—É–±–æ–∫–æ–µ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —Ä–∞–±–æ—Ç—É —Å —á–∞–∫—Ä–∞–º–∏. –ò–∑—É—á–∏—Ç–µ –º–µ—Ç–æ–¥—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ –¥–ª—è –≥–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏–∏ –∂–∏–∑–Ω–∏.',
            thumbnailUrl: '/images/meditation-thumbnails/chakras.jpg',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'paid',
            duration: '45:20'
        },
        {
            id: '5',
            title: '–¢–µ—Ö–Ω–∏–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∂–µ–ª–∞–Ω–∏–π',
            shortDescription: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –≤–æ–ø–ª–æ—â–µ–Ω–∏—è —Ü–µ–ª–µ–π –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å',
            fullDescription: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∂–µ–ª–∞–Ω–∏–π. –ù–∞—É—á–∏—Ç–µ—Å—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–æ–ø–ª–æ—â–∞—Ç—å —Å–≤–æ–∏ —Ü–µ–ª–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å.',
            thumbnailUrl: '/images/meditation-thumbnails/manifestation.jpg',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'subscription',
            duration: '52:10'
        },
        {
            id: '6',
            title: '–ó–∞—â–∏—Ç–∞ –æ—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫',
            shortDescription: '–ú–µ—Ç–æ–¥—ã —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—â–∏—Ç–Ω—ã—Ö –±–∞—Ä—å–µ—Ä–æ–≤',
            fullDescription: '–ò–∑—É—á–∏—Ç–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã –æ—Ç –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏–ª—å–Ω—ã—Ö –∑–∞—â–∏—Ç–Ω—ã—Ö –±–∞—Ä—å–µ—Ä–æ–≤.',
            thumbnailUrl: '/images/meditation-thumbnails/protection.jpg',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'subscription',
            duration: '38:25'
        }
    ]);

    const handleVideoClick = (video: VideoLesson) => {
        if (video.accessType === 'free') {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∏–¥–µ–æ
            window.location.href = `/meditation/${video.id}`;
        } else if (video.accessType === 'paid') {
            setModalMessage('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–¥–∏—Ç–∞—Ü–∏—é –≤—ã –¥–æ–ª–∂–Ω—ã –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –Ω–∞ 3 –º–µ—Å—è—Ü–∞');
            setShowModal(true);
        } else if (video.accessType === 'subscription') {
            setModalMessage('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–¥–∏—Ç–∞—Ü–∏—é –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É');
            setShowModal(true);
        }
    };

    const getAccessIcon = (accessType: string) => {
        switch (accessType) {
            case 'free':
                return null;
            case 'paid':
            case 'subscription':
                return 'üîí';
            default:
                return null;
        }
    };

    const getAccessColor = (accessType: string) => {
        switch (accessType) {
            case 'free':
                return 'bg-green-500 hover:bg-green-600';
            case 'paid':
                return 'bg-blue-500 hover:bg-blue-600';
            case 'subscription':
                return 'bg-purple-500 hover:bg-purple-600';
            default:
                return 'bg-gray-500 hover:bg-gray-600';
        }
    };

    return (
        <div className="min-h-screen bg-gray-50 p-4 pt-8 relative">
            {/* Header with Back Button */}
            <div className="relative text-center mb-8">
                <Link to="/" className="absolute left-0 flex items-center text-gray-700 hover:text-gray-900 transition-colors">
                    <div className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center mr-2">
                        <span className="text-lg">‚Üê</span>
                    </div>
                </Link>
                <h1 className="text-2xl font-bold text-gray-900">–ú–µ–¥–∏—Ç–∞—Ü–∏–∏</h1>
            </div>

            {/* Video Lessons Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {videoLessons.map((video) => (
                    <div key={video.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                        {/* Thumbnail */}
                        <div className="relative">
                            <img 
                                src={video.thumbnailUrl} 
                                alt={video.title}
                                className="w-full h-48 object-cover bg-gray-200"
                                onError={(e) => {
                                    const target = e.target as HTMLImageElement;
                                    target.style.display = 'none';
                                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º
                                    const placeholder = document.createElement('div');
                                    placeholder.className = 'w-full h-48 bg-blue-600 flex items-center justify-center text-white text-center p-4';
                                    placeholder.innerHTML = `<div><div class="text-2xl mb-2">üìπ</div><div class="text-sm">${video.title}</div></div>`;
                                    target.parentNode?.appendChild(placeholder);
                                }}
                            />
                            <div className="absolute top-2 right-2 bg-black bg-opacity-75 text-white px-2 py-1 rounded text-sm">
                                {video.duration}
                            </div>
                            {video.accessType !== 'free' && (
                                <div className="absolute top-2 left-2 bg-black bg-opacity-75 text-white px-2 py-1 rounded text-sm">
                                    {video.accessType === 'paid' ? 'üíé' : '‚≠ê'}
                                </div>
                            )}
                        </div>

                        {/* Content */}
                        <div className="p-4">
                            <h3 className="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
                                {video.title}
                            </h3>
                            <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                                {video.shortDescription}
                            </p>

                            {/* Action Button */}
                            <button
                                onClick={() => handleVideoClick(video)}
                                className={`w-full py-2 px-4 rounded-lg text-white font-medium transition-colors flex items-center justify-center ${
                                    video.accessType === 'free' 
                                        ? getAccessColor(video.accessType)
                                        : 'bg-gray-400 hover:bg-gray-500'
                                }`}
                            >
                                {video.accessType === 'free' ? (
                                    <>
                                        <span>–ü–µ—Ä–µ–π—Ç–∏</span>
                                        <span className="ml-2">‚ñ∂</span>
                                    </>
                                ) : (
                                    <>
                                        <span className="mr-2">{getAccessIcon(video.accessType)}</span>
                                        <span>–ó–∞–∫—Ä—ã—Ç–æ</span>
                                    </>
                                )}
                            </button>
                        </div>
                    </div>
                ))}
            </div>

            {/* Modal */}
            {showModal && (
                <div className="fixed inset-0 flex items-center justify-center z-10 p-4" style={{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }}>

                    <div className="bg-white rounded-lg p-6 max-w-md w-full">
                        <div className="text-center">
                            <div className="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <span className="text-2xl">üîí</span>
                            </div>
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">
                                –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
                            </h3>
                            <p className="text-gray-600 mb-6">
                                {modalMessage}
                            </p>
                            <button
                                onClick={() => setShowModal(false)}
                                className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
                            >
                                –ü–æ–Ω—è—Ç–Ω–æ
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Meditations; 