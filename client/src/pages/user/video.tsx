import React, { useState } from 'react';
import { Link } from 'react-router-dom';

interface VideoLesson {
    id: string;
    title: string;
    shortDescription: string;
    fullDescription: string;
    thumbnailUrl: string;
    youtubeUrl: string;
    accessType: 'free' | 'subscription';
}

const Video: React.FC = () => {
    const [showModal, setShowModal] = useState(false);
    const [videoLessons] = useState<VideoLesson[]>([
        {
            id: '1',
            title: '–ú–µ–¥–ª–µ–Ω–Ω—ã–µ –º—ã—Å–ª–∏',
            shortDescription: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ù—É—Ä–ª–∞–Ω–∞ –ú—É—Ä–∞—Ç–∫–∞–ª–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–≤–ª–∞–¥–µ—Ç—å –Ω–∞–≤—ã–∫–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –º—ã—Å–ª–µ–π',
            fullDescription: `–£ 98% –ª—é–¥–µ–π –º—ã—Å–ª–∏ –Ω–µ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –º—ã—Å–ª—è—Ç –Ω–∞ ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª –º—ã—Å–ª—è—Ö (–±–æ–ª—Ç–∞–ª–∫–∞ –≤ –≥–æ–ª–æ–≤–µ). –≠—Ñ–∏–º–µ—Ä–æ–∏–¥ ‚Äì –∫–æ—Ä–æ—Ç–∫–æ–∂–∏–≤—É—â–∏–π —ç–≥—Ä–µ–≥–æ—Ä (–æ–¥–∏–Ω —Å–µ–∑–æ–Ω). ¬´–ú–µ–¥–ª–µ–Ω–Ω–∞—è¬ª –º—ã—Å–ª—å –∫–∞–∫ –±—ã –∏–¥–µ—Ç —Ñ–æ–Ω–æ–º, –≤—ã –¥–µ–ª–∞–µ—Ç–µ –¥–µ–ª–∞, –∞ —Ñ–æ–Ω–æ–º –∏–¥–µ—Ç –º—ã—Å–ª—å ¬´–ø–æ–∑–≤–æ–Ω–∏ –º–∞–º–µ¬ª; –æ–Ω–∏ –¥–∞–∂–µ –≤–æ —Å–Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –í—ã —Å–ª—É—à–∞–µ—Ç–µ –ª–µ–∫—Ü–∏—é, –∞ –∏–Ω—Å–∞–π—Ç—ã –∏–¥—É—Ç –Ω–∞ ¬´–º–µ–¥–ª–µ–Ω–Ω—ã—Ö¬ª –º—ã—Å–ª—è—Ö.
–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –±—ã—Å—Ç—Ä—ã–º–∏ –∏ –º–µ–¥–ª–µ–Ω–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏ ‚Äì –∫–∞–∫ –º–µ–Ω—è–µ—Ç—Å—è —Ä—É—Å–ª–æ –ø–æ–¥–∑–µ–º–Ω–æ–π —Ä–µ–∫–∏ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞. –ë–æ–ª—å—à—É—é —Ü–µ–ª—å –ª—é–¥–∏ –ø–æ—Ç–æ–∫–∞ –º—ã—Å–ª—è—Ç –Ω–∞ ¬´–º–µ–¥–ª–µ–Ω–Ω—ã—Ö¬ª –º—ã—Å–ª—è—Ö, –≤—Å–µ —á—Ç–æ –Ω–µ –¥–ª—è —Å–µ–±—è ‚Äì –Ω–∞ ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª. –ê –≤ —Å–æ—Ü–∏—É–º–µ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ –≤–µ—â–∏ –º—ã—Å–ª—è—Ç –Ω–∞ ¬´–º–µ–¥–ª–µ–Ω–Ω—ã—Ö¬ª –º—ã—Å–ª—è—Ö, –∞ —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è –Ω–∞ ¬´–±—ã—Å—Ç—Ä—ã—Ö¬ª –º—ã—Å–ª—è—Ö.
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–æ–º –≤ –Ω–æ–≤–æ–º –≤–∏–¥–µ–æ –ù—É—Ä–ª–∞–Ω–∞ –ú—É—Ä–∞—Ç–∫–∞–ª–∏:`,
            thumbnailUrl: '/images/video-thumbnails/video1.png',
            youtubeUrl: 'https://www.youtube.com/embed/4ayAeaJPC10',
            accessType: 'free'
        },
        {
            id: '2',
            title: '–†–µ—Ñ–µ—Ä–µ–Ω—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞',
            shortDescription: '–ú–æ—â–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –≤—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á –∏ —Å–æ–±–∏—Ä–∞–Ω–∏—è –Ω—É–∂–Ω—ã—Ö –¥–ª—è –≤–∞—Å —Å—É—â–Ω–æ—Å—Ç–µ–π',
            fullDescription: `–†–µ—Ñ–µ—Ä–µ–Ω—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞ ‚Äì –º–æ—â–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –≤—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á (–∑–¥–æ—Ä–æ–≤—å–µ, –¥–µ–Ω—å–≥–∏). –õ—é–¥–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å–æ–∑–Ω–∞–Ω–∏—è –≤–∏–¥—è—Ç —Ç–µ–ª–∞, –∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏—è –æ—â—É—â–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å–∏–ª—É –ø—Ä–∏–≤–ª–µ–∫–∞–µ–º—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π. –†–µ—Ñ–µ—Ä–µ–Ω—Ç–Ω—É—é –≥—Ä—É–ø–ø—É –º—ã –≤—ã–±–∏—Ä–∞–µ–º —É–º–æ–º, –∞ –æ—Ç–±–∏—Ä–∞–µ—Ç –∏ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç—Å—è –Ω–∞—à –î—É—Ö; –æ–Ω–∞ –≤—ã—Ç—è–≥–∏–≤–∞–µ—Ç –Ω–∞—Å –≤ –Ω–æ–≤—ã–µ –ª–æ–∫–∞—Ü–∏–∏, –Ω–∞ –Ω–æ–≤—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª–æ–∏.
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ–º, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–±—Ä–∞—Ç—å —Ä–µ—Ñ–µ—Ä–µ–Ω—Ç–Ω—É—é –≥—Ä—É–ø–ø—É, –≤ –Ω–æ–≤–æ–º –≤–∏–¥–µ–æ –ù—É—Ä–ª–∞–Ω–∞ –ú—É—Ä–∞—Ç–∫–∞–ª–∏:`,
            thumbnailUrl: '/images/video-thumbnails/video2.png',
            youtubeUrl: 'https://www.youtube.com/embed/A0OVUJgGoWM',
            accessType: 'free',
        },
        {
            id: '3',
            title: '–°–ø–∏—Ä–∞–ª—å–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞',
            shortDescription: '–ù–æ–≤–µ–π—à–∞—è –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å–æ–∑–Ω–∞–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–µ—Ä–µ–¥–Ω–∏–π –∫—Ä–∞–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –æ–± —ç—Ç–∞–ø–∞—Ö —Ä–∞–∑–≤–∏—Ç–∏—è —á–µ–ª–æ–≤–µ–∫–∞ –∏ –æ–±—â–µ—Å—Ç–≤–∞',
            fullDescription: '–ù–æ–≤–µ–π—à–∞—è –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å–æ–∑–Ω–∞–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø–µ—Ä–µ–¥–Ω–∏–π –∫—Ä–∞–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –æ–± —ç—Ç–∞–ø–∞—Ö —Ä–∞–∑–≤–∏—Ç–∏—è —á–µ–ª–æ–≤–µ–∫–∞ –∏ –æ–±—â–µ—Å—Ç–≤–∞',
            thumbnailUrl: '/images/video-thumbnails/video3.png',
            youtubeUrl: 'https://www.youtube.com/embed/dQw4w9WgXcQ',
            accessType: 'subscription',
        }
    ]);

    const handleVideoClick = (video: VideoLesson) => {
        if (video.accessType === 'free') {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∏–¥–µ–æ
            window.location.href = `/video/${video.id}`;
        } else if (video.accessType === 'subscription') {
            setShowModal(true);
        }
    };

    const getAccessIcon = (accessType: string) => {
        switch (accessType) {
            case 'free':
                return null;
            case 'subscription':
                return 'üîí';
            default:
                return null;
        }
    };

    const getAccessColor = (accessType: string) => {
        switch (accessType) {
            case 'free':
                return 'bg-blue-500 hover:bg-blue-600';
            case 'subscription':
                return 'bg-purple-500 hover:bg-purple-600';
            default:
                return 'bg-gray-500 hover:bg-gray-600';
        }
    };

    return (
        <div className="min-h-screen relative">
            {/* Header with Back Button */}
            <div className="flex items-center justify-between bg-gray-100 p-4 mb-2">
                <Link to="/" className="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center">
                    <img src="/icons/arrowBack.png" alt="arrowBack" className="w-5 h-5" />
                </Link>
                <h1 className="text-2xl font-bold">–í–∏–¥–µ–æ</h1>
                <div>
                    <img src="/icons/logo.png" alt="logo" className="w-8 h-8" />
                </div>
            </div>

            {/* Video Lessons Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 p-4">
                {videoLessons.map((video) => (
                    <div key={video.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                        {/* Thumbnail */}
                        <div className="relative">
                            <img 
                                src={video.thumbnailUrl} 
                                alt={video.title}
                                className="w-full h-48 object-cover bg-gray-200"
                                onError={(e) => {
                                    const target = e.target as HTMLImageElement;
                                    target.style.display = 'none';
                                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º
                                    const placeholder = document.createElement('div');
                                    placeholder.className = 'w-full h-48 bg-blue-600 flex items-center justify-center text-white text-center p-4';
                                    placeholder.innerHTML = `<div><div class="text-2xl mb-2">üìπ</div><div class="text-sm">${video.title}</div></div>`;
                                    target.parentNode?.appendChild(placeholder);
                                }}
                            />
                            {/* <div className="absolute top-2 right-2 bg-black bg-opacity-75 text-white px-2 py-1 rounded text-sm">
                                {video.duration}
                            </div> */}
                        </div>

                        {/* Content */}
                        <div className="p-4">
                            <h3 className="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
                                {video.title}
                            </h3>
                            <p className="text-gray-600 text-sm mb-4 line-clamp-3">
                                {video.shortDescription}
                            </p>

                            {/* Action Button */}
                            <button
                                onClick={() => handleVideoClick(video)}
                                className={`w-full py-2 px-4 rounded-lg text-white font-medium transition-colors flex items-center justify-center ${
                                    video.accessType === 'free' 
                                        ? getAccessColor(video.accessType)
                                        : 'bg-gray-400 hover:bg-gray-500'
                                }`}
                            >
                                {video.accessType === 'free' ? (
                                    <>
                                        <span>–ü–µ—Ä–µ–π—Ç–∏</span>
                                        <span className="ml-2">‚ñ∂</span>
                                    </>
                                ) : (
                                    <>
                                        <span className="mr-2">{getAccessIcon(video.accessType)}</span>
                                        <span>–ó–∞–∫—Ä—ã—Ç–æ</span>
                                    </>
                                )}
                            </button>
                        </div>
                    </div>
                ))}
            </div>

            {/* Modal */}
            {showModal && (
                <div className="fixed inset-0 flex items-center justify-center z-10 p-4" style={{ backgroundColor: 'rgba(0, 0, 0, 0.7)' }}>

                    <div className="bg-white rounded-lg p-6 max-w-md w-full">
                        <div className="text-center">
                            <div className="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <span className="text-2xl">üîí</span>
                            </div>
                            <h3 className="text-lg font-semibold text-gray-900 mb-4">
                                –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
                            </h3>
                            <p className="text-gray-600 mb-6">
                                –ù—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞
                            </p>
                            <button
                                onClick={() => setShowModal(false)}
                                className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors"
                            >
                                –ü–æ–Ω—è—Ç–Ω–æ
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Video; 